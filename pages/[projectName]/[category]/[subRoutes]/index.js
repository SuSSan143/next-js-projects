import React from "react";
import { useRouter } from "next/router";
import Head from "next/head";


import projectData from "../../../../data/data";
import Currentpage from "../../../../projects/SpaceTourism/CurrentPage";

const categoryParser = (category) => {
  if (category) {
    const ary = category.split("-");
    const newArray = ary.map((item, index) =>
      index === 0
        ? item.trim()
        : item.trim().charAt(0).toUpperCase() + item.trim().slice(1)
    );
    return newArray.join("");
  }
  return "";
};

const pageTitleParser = (pageTitle) => {
  if (pageTitle) {
    const ary = pageTitle.split("-");
    const newArray = ary.map(
      (item, index) =>
        item.trim().charAt(0).toUpperCase() + item.trim().slice(1)
    );
    return newArray.join(" ");
  }
  return "";
};

const SubRoute = (props) => {
  const router = useRouter();
  const { projectName, category, subRoutes } = router.query;
  const parsedProjectName = categoryParser(projectName);
  // const parsedCategory = categoryParser(category);
  // const parsedSubRoute = categoryParser(subRoutes);
  const titleProjectName = pageTitleParser(projectName);
  const titleCategory = pageTitleParser(category);
  const titleSubRoute = pageTitleParser(subRoutes);


  return (
    <div>
      <Head>
        <title>{`${titleProjectName} | ${titleCategory} | ${titleSubRoute}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href={`/assets/${parsedProjectName}/favicon-32x32.png`}
        />
      </Head>
      <Currentpage data={props} category={category} />
    </div>
  );
};
export default SubRoute;

export async function getStaticPaths() {
  return {
    paths: [
      {
        params: {
          projectName: "space-tourisms",
          category: "destination",
          subRoutes: "moon",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "destination",
          subRoutes: "mars",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "destination",
          subRoutes: "europa",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "destination",
          subRoutes: "titan",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "crew",
          subRoutes: "Douglas Hurley",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "crew",
          subRoutes: "Mark Shuttleworth",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "crew",
          subRoutes: "Victor Glover",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "crew",
          subRoutes: "Anousheh Ansari",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "technology",
          subRoutes: "Launch vehicle",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "technology",
          subRoutes: "Spaceport",
        },
      },
      {
        params: {
          projectName: "space-tourisms",
          category: "technology",
          subRoutes: "Space capsule",
        },
      },
    ],
    fallback: false,
  };
}

export async function getStaticProps(context) {
  const { projectName, category, subRoutes } = context.params;
  const parsedCategory = categoryParser(category);
  const parsedProjectName = categoryParser(projectName);
  const projects = projectData(parsedProjectName);
  const project = projects[parsedProjectName];
  let currentPageData = project[parsedCategory].filter(
    (data) => data.name.toLowerCase() === subRoutes.toLowerCase()
  );
  return {
    props: currentPageData[0],
  };
}
